server {
    listen 80;
    server_name app.com.br;

    location / {
        return 301 https://$host$request_uri;
    }

}
server {
    listen 443 ssl;
    server_name app.com.br;

    ssl_certificate /etc/nginx/ssl/app.pem;
    ssl_certificate_key /etc/nginx/ssl/app.key;

    add_header Expect-CT 'enforce; max-age=7776000';
    add_header Content-Security-Policy "frame-ancestors app.com.br;";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";

    sub_filter_once off;
    sub_filter_types *;
    sub_filter **CSP_NONCE** $request_id;
    add_header Content-Security-Policy "object-src 'none'; script-src 'self' 'nonce-$request_id' 'unsafe-inline' 'unsafe-eval' 'strict-dynamic' https: http:; base-uri 'self';";

    location ~* \.(woff2|js|css|gif|png|jpeg|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|oex|xpi|safariextz|vcf)$ {
        expires 365d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        proxy_pass http://app1:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /robots.txt {
            add_header  Content-Type  text/plain;
            return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
        proxy_pass http://app1:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
